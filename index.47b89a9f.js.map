{"mappings":"oeAAAA,EAAA,S,WCAA,IAAAC,EAAAD,EAAA,S,aAGA,MAAME,EAAaC,SAASC,cAAc,iBACpCC,EAAcF,SAASC,cAAc,mBACrCE,EAAW,IAAI,EAAAL,EAAAM,SAmBrB,SAASC,EAAaC,GACpB,MAsBMC,EAAUD,EAAQE,KAtBTC,KACb,EAAAC,EAAAC,gBAAeF,GACf,MAAMG,EAAUH,EAAII,GACdC,EAAaL,EAAIM,MACjBC,EAAOP,EAAIQ,cAAgB,GAGjC,IAAIC,EAAW,GAOf,OALEA,EADET,EAAIU,YACK,mCAAcV,EAAIU,cAElB,WAGN,8CACQP,6BAAmCM,WAAkBJ,4CAEtCA,2CACD,EAAAJ,EAAAC,gBAAeF,QAAUO,EAAKI,MAAM,EAAG,qBAC5D,IAG0BC,KAAK,IACzCtB,EAAWuB,mBAAmB,YAAaf,E,CA1C7CL,EAAYqB,iBAAiB,UAO7B,SAA6BC,GAC3BA,EAAEC,iBACFC,QAAQC,IAAIH,EAAEI,cAAcC,SAASC,MAAMC,OAC3C5B,EAAS2B,MAAQN,EAAEI,cAAcC,SAASC,MAAMC,MAChD5B,EAAS6B,YAqCTjC,EAAWkC,UAAY,GAnCvB9B,EAAS+B,sBAAsBC,MAAKC,IAClCV,QAAQC,IAAIS,EAAK9B,SACjBD,EAAa+B,EAAK9B,QAAQ,G,IAd9BH,EAASkC,kBAAkBF,MAAKC,GAAQ/B,EAAa+B,EAAK9B,WAC1DH,EAASmC,cAAcH,MAAKC,IA0C5B,IAAsBG,EAzCpBb,QAAQC,IAAIS,GAyCQG,EAxCPH,EAAKG,OAyClBC,aAAaC,QAAQ,gBAAiBC,KAAKC,UAAUJ,GAzC5B,I","sources":["src/index.js","src/js/movieMarkup.js"],"sourcesContent":["import './js/preloader';\nimport './js/fetchApi';\nimport './js/movieMarkup';\nimport './js/checkGenres';\nimport './js/modalMovie';\n","import MovieApi from './fetchApi';\nimport { checkGenreByID } from './checkGenres';\n\nconst listMovies = document.querySelector('.js-home-main');\nconst searchMovie = document.querySelector('.js-search-form');\nconst movieApi = new MovieApi();\nsearchMovie.addEventListener('submit', searchMovieForQuery);\nmovieApi.fetchMoviesWeek().then(data => createMarkup(data.results));\nmovieApi.fetchGeners().then(data => {\n  console.log(data);\n  genresMovies(data.genres);\n});\n\nfunction searchMovieForQuery(e) {\n  e.preventDefault();\n  console.log(e.currentTarget.elements.query.value);\n  movieApi.query = e.currentTarget.elements.query.value;\n  movieApi.resetPage();\n  clearPage();\n  movieApi.fetchMoviesForQuery().then(data => {\n    console.log(data.results);\n    createMarkup(data.results);\n  });\n}\nfunction createMarkup(results) {\n  const markup = obj => {\n    checkGenreByID(obj);\n    const movieId = obj.id;\n    const movieTitle = obj.title;\n    const year = obj.release_date || '';\n    const imageUrl = 'https://image.tmdb.org/t/p/w500/';\n\n    let imageSrc = '';\n    if (obj.poster_path) {\n      imageSrc = `${imageUrl}${obj.poster_path}`;\n    } else {\n      imageSrc = 'no_image';\n    }\n\n    return `<li class=\"item-movies\">\n        <img id=\"${movieId}\" class=\"img-movie\" src=\"${imageSrc}\" alt=\"${movieTitle}\" />\n\n        <h2 class=\"title-movie\">${movieTitle}</h2>\n        <p class=\"genre-movie\">${checkGenreByID(obj)} | ${year.slice(0, 4)}</p>\n      </li>`;\n  };\n\n  const markups = results.map(markup).join('');\n  listMovies.insertAdjacentHTML('beforeend', markups);\n}\nfunction genresMovies(genres) {\n  localStorage.setItem('GENRES-MOVIES', JSON.stringify(genres));\n}\nfunction clearPage() {\n  listMovies.innerHTML = '';\n}\n"],"names":["parcelRequire","$9TCtp","$872b485a5f215f6d$var$listMovies","document","querySelector","$872b485a5f215f6d$var$searchMovie","$872b485a5f215f6d$var$movieApi","default","$872b485a5f215f6d$var$createMarkup","results","markups","map","obj","$5L0Fs","checkGenreByID","movieId","id","movieTitle","title","year","release_date","imageSrc","poster_path","slice","join","insertAdjacentHTML","addEventListener","e","preventDefault","console","log","currentTarget","elements","query","value","resetPage","innerHTML","fetchMoviesForQuery","then","data","fetchMoviesWeek","fetchGeners","genres","localStorage","setItem","JSON","stringify"],"version":3,"file":"index.47b89a9f.js.map"}